trigger:
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  location: 'East US'
  azureSubscriptionEndpoint: 'PiecewiseSC'
  acrHostName: 'piecewise.azurecr.io'
  acrName: 'piecewise'
  rgName: 'piecewise-pre-env'
  imageName: 'apps/piecewise'
  webAppName: 'piecewise-app'
  
stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:

    # Create or update the ACR resource
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure Container Registry'
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        resourceGroupName: '$(rgName)'
        location: $(location)
        csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
        overrideParameters: '-registryName "$(acrName)" -registryLocation "$(location)" -registrySku standard'

    # Build container image
    - task: Docker@1
      displayName: 'Build container image'
      inputs:
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: '$(acrHostName)'
        imageName: '$(imageName):$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)/'

    # Push container image
    - task: Docker@1
      displayName: 'Push container image'
      inputs:
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: '$(acrHostName)'
        command: 'Push an image'
        imageName: '$(imageName):$(Build.BuildId)'

# Staging release
- stage: Depoy
  jobs:
  - job: Release
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:

    # Create or update Azure App Service
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure App Service'
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        resourceGroupName: '$(rgName)'
        location: '$(location)'
        csmFile: '$(Pipeline.Workspace)/**/webapp-template.json'
        csmParametersFile: '$(Pipeline.Workspace)/**/webapp-parameters.json'
        overrideParameters: '-webAppName $(webAppName) -hostingPlanName $(webAppName) -appInsightsLocation "$(location)" -sku "S1 Standard" -registryName $(acrName) -registryLocation "$(location)" -registrySku standard -imageName $(imageName):$(Build.BuildId)'

    # Deploy App Service
    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: $(azureSubscriptionEndpoint)
        appType: applinux
        WebAppName: $(webAppName)
        DockerNamespace: $(acrHostName)
        DockerRepository: $(imageName)
        DockerImageTag: '$(Build.BuildId)'
        WebAppUri: webAppUrl
        TakeAppOfflineFlag: true
        UseWebDeploy: true
        RenameFilesFlag: true
